{
  "openapi": "3.0.0",
  "info": {
    "title": "nutri-track API documentation",
    "version": "1.0.0",
    "license": {
      "name": "MIT",
      "url": "https://github.com/antonio-lazaro/prisma-express-typescript-boilerplate.git"
    }
  },
  "servers": [
    {
      "url": "http://14.225.211.111:3000/v1",
      "description": "Development server"
    },
    {
      "url": "http://localhost:3000/v1",
      "description": "Local server"
    }
  ],
  "paths": {
    "/applications/{id}/status": {
      "put": {
        "summary": "Change application status",
        "tags": ["Application"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["status"],
                "properties": {
                  "status": {
                    "$ref": "#/components/enums/ApplicationStatusEnum"
                  }
                },
                "example": {
                  "status": "APPROVED"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/applications/{id}/note": {
      "put": {
        "summary": "Expert update application note",
        "tags": ["Application"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["note"],
                "properties": {
                  "status": {
                    "type": "string"
                  }
                },
                "example": {
                  "note": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/applications": {
      "post": {
        "summary": "Create an application",
        "tags": ["Application"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateApplication"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all applications",
        "tags": ["Application"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Application"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/applications/{id}": {
      "get": {
        "summary": "Get an application",
        "tags": ["Application"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update an application",
        "tags": ["Application"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  }
                },
                "example": {
                  "image": "https://www.google.com",
                  "description": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete an application",
        "tags": ["Application"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/auth/register": {
      "post": {
        "summary": "Register as user",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["user", "bmiRecord", "medicalConditionIds"],
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/CreateUser"
                  },
                  "bmiRecord": {
                    "$ref": "#/components/schemas/CreateBmiRecord"
                  },
                  "medicalConditionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  },
                  "dietRestrictionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "user": {
                    "name": "test",
                    "email": "test@gmail.com",
                    "password": "password",
                    "dob": "2020-05-12T16:18:04.793Z",
                    "avatar": "https://www.google.com",
                    "height": 180,
                    "freeTimes": [
                      {
                        "startFreeTime": "2020-05-12T16:18:04.793Z",
                        "endFreeTime": "2020-05-12T16:18:04.793Z"
                      }
                    ]
                  },
                  "bmiRecord": {
                    "weight": 10,
                    "date": "2020-05-12T16:18:04.793Z"
                  },
                  "medicalConditionIds": [1],
                  "dietRestrictionIds": [1]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "tokens": {
                      "$ref": "#/components/schemas/AuthTokens"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DuplicateEmail"
          }
        }
      }
    },
    "/auth/register-expert": {
      "post": {
        "summary": "Register as an expert and wait for approval",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["user", "application"],
                "properties": {
                  "user": {
                    "$ref": "#/components/schemas/CreateUser"
                  },
                  "application": {
                    "$ref": "#/components/schemas/CreateApplication"
                  }
                },
                "example": {
                  "user": {
                    "name": "test",
                    "email": "test@gmail.com",
                    "password": "password",
                    "dob": "2020-05-12T16:18:04.793Z",
                    "avatar": "https://www.google.com"
                  },
                  "application": {
                    "image": "https://www.google.com",
                    "description": "test"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/ExpertRegisterResponse"
                    },
                    "tokens": {
                      "$ref": "#/components/schemas/AuthTokens"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DuplicateEmail"
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "Login",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email", "password"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "password": {
                    "type": "string",
                    "format": "password"
                  },
                  "deviceToken": {
                    "type": "string"
                  },
                  "deviceType": {
                    "type": "string",
                    "enum": ["ANDROID", "IOS"]
                  }
                },
                "example": {
                  "email": "fake@example.com",
                  "password": "password1",
                  "deviceToken": "test",
                  "deviceType": "ANDROID"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "tokens": {
                      "$ref": "#/components/schemas/AuthTokens"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Invalid email or password",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Invalid email or password"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login/google": {
      "post": {
        "summary": "Login Google",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["idToken"],
                "properties": {
                  "idToken": {
                    "type": "string"
                  }
                },
                "example": {
                  "idToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "user": {
                      "$ref": "#/components/schemas/User"
                    },
                    "tokens": {
                      "$ref": "#/components/schemas/AuthTokens"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Email is already existed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 400,
                  "message": "Email is already existed"
                }
              }
            }
          }
        }
      }
    },
    "/auth/logout": {
      "post": {
        "summary": "Logout",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "example": {
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/auth/refresh-tokens": {
      "post": {
        "summary": "Refresh auth tokens",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["refreshToken"],
                "properties": {
                  "refreshToken": {
                    "type": "string"
                  }
                },
                "example": {
                  "refreshToken": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AuthTokens"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          }
        }
      }
    },
    "/auth/forgot-password": {
      "post": {
        "summary": "Forgot password",
        "description": "An email will be sent to reset password.",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["email"],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email"
                  }
                },
                "example": {
                  "email": "fake@example.com"
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/auth/reset-password": {
      "post": {
        "summary": "Reset password",
        "tags": ["Auth"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["password", "otp", "email"],
                "properties": {
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "description": "At least one number and one letter"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "Email of the user"
                  },
                  "otp": {
                    "type": "string",
                    "description": "One time password"
                  }
                },
                "example": {
                  "otp": 123456,
                  "email": "fake@gmail.com",
                  "password": 123456
                }
              }
            }
          }
        },
        "responses": {
          "204": {
            "description": "No content"
          },
          "401": {
            "description": "Password reset failed",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                },
                "example": {
                  "code": 401,
                  "message": "Password reset failed"
                }
              }
            }
          }
        }
      }
    },
    "/auth/profile": {
      "get": {
        "summary": "Get user's profile",
        "tags": ["Auth"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/bmi-records": {
      "post": {
        "summary": "Create a bmi record",
        "tags": ["BmiRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["weight", "date"],
                "properties": {
                  "weight": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "example": {
                  "weight": 10,
                  "date": "2020-05-12T16:18:04.793Z"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmiRecord"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all users' bmi records",
        "tags": ["BmiRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/BmiRecord"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/bmi-records/{id}": {
      "get": {
        "summary": "Get a bmi-record",
        "tags": ["BmiRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmiRecord"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a bmi record",
        "tags": ["BmiRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "weight": {
                    "type": "number"
                  },
                  "date": {
                    "type": "string",
                    "format": "date-time"
                  }
                },
                "example": {
                  "weight": 10,
                  "date": "2020-05-12T16:18:04.793Z"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BmiRecord"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a bmi record",
        "tags": ["BmiRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Bmi record id"
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/cal-records": {
      "post": {
        "summary": "Create a cal record",
        "tags": ["CalRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateCalRecord"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalRecord"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all cal records",
        "tags": ["CalRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/CalRecord"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/cal-records/{id}": {
      "get": {
        "summary": "Get a cal record",
        "tags": ["CalRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalRecord"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a cal record",
        "tags": ["CalRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateCalRecord"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CalRecord"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a cal record",
        "tags": ["CalRecords"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/chats": {
      "post": {
        "summary": "Create a chat room",
        "tags": ["Chats"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateChat"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Chat"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get users' chat history",
        "tags": ["Chats"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "receiverId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Chat"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/daily-cals": {
      "post": {
        "summary": "Create a daily cal",
        "tags": ["DailyCals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyCal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyCal"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all users' daily cals",
        "tags": ["DailyCals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyCal"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/daily-cals/{id}": {
      "get": {
        "summary": "Get a daily cal",
        "tags": ["DailyCals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyCal"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a daily cal",
        "tags": ["DailyCals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyCal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyCal"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a daily cal",
        "tags": ["DailyCals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/daily-diet-reports": {
      "post": {
        "summary": "Create a daily diet reports",
        "tags": ["DailyDietReports"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyDietReport"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyDietReport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get user's daily diet reports",
        "tags": ["DailyDietReports"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "params",
            "name": "dietId",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyDietReport"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/daily-diet-reports/{id}": {
      "get": {
        "summary": "Get a daily diet report",
        "tags": ["DailyDietReports"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyDietReport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a daily diet report",
        "tags": ["DailyDietReports"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDailyDietReport"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyDietReport"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a daily diet report",
        "tags": ["DailyDietReports"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/daily-diet-reports/statistic": {
      "get": {
        "summary": "Get daily diet reports statistic",
        "tags": ["DailyDietReports"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "params",
            "name": "score",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "params",
            "name": "status",
            "schema": {
              "$ref": "#/components/enums/ReportStatusEnum"
            }
          },
          {
            "in": "params",
            "name": "from",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "in": "params",
            "name": "to",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "totalScoreMatch": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalStatusMatch": {
                      "type": "integer",
                      "example": 10
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/daily-diets": {
      "post": {
        "summary": "Create a daily diet",
        "tags": ["DailyDiets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDailyDiet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyDiet"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all daily diets",
        "tags": ["DailyDiets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dietId",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DailyDiet"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/daily-diets/{id}": {
      "get": {
        "summary": "Get a daily diet",
        "tags": ["DailyDiets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyDiet"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a daily diet",
        "tags": ["DailyDiets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDailyDiet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DailyDiet"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a daily diet",
        "tags": ["DailyDiets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/diet-categories": {
      "post": {
        "summary": "Create a diet category",
        "tags": ["DietCategories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDietCategory"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietCategory"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all diet categories",
        "tags": ["DietCategories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DietCategory"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/diet-categories/{id}": {
      "get": {
        "summary": "Get a diet category",
        "tags": ["DietCategories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietCategory"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a diet category",
        "tags": ["DietCategories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDietCategory"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietCategory"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a diet category",
        "tags": ["DietCategories"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/user-diet-restrictions": {
      "post": {
        "summary": "Create diet restrictions for user",
        "tags": ["UserDietRestrictions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["dietRestrictionIds"],
                "properties": {
                  "dietRestrictionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "dietRestrictionIds": [1]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietRestrictionUserResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get user's diet restrictions",
        "tags": ["UserDietRestrictions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DietRestrictionUserResponse"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/user-diet-restrictions/{id}": {
      "get": {
        "summary": "Get a user's diet restriction",
        "tags": ["UserDietRestrictions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietRestrictionUserResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a user's diet restriction",
        "tags": ["UserDietRestrictions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/diet-restrictions": {
      "post": {
        "summary": "Create a diet restriction",
        "tags": ["DietRestrictions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["high", "low", "avoid"],
                "properties": {
                  "high": {
                    "type": "string"
                  },
                  "low": {
                    "type": "string"
                  },
                  "avoid": {
                    "type": "string"
                  }
                },
                "example": {
                  "high": "test",
                  "low": "test",
                  "avoid": "test"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietRestriction"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all diet restrictions",
        "tags": ["DietRestrictions"],
        "parameters": [
          {
            "in": "query",
            "name": "avoid",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "sortby",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/DietRestriction"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/diet-restrictions/{id}": {
      "get": {
        "summary": "Get a diet restriction",
        "tags": ["DietRestrictions"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietRestriction"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a diet restriction",
        "tags": ["DietRestrictions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "high": {
                    "type": "string"
                  },
                  "low": {
                    "type": "string"
                  },
                  "avoid": {
                    "type": "string"
                  }
                },
                "example": {
                  "high": "test",
                  "low": "test",
                  "avoid": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DietRestriction"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a diet restriction",
        "tags": ["DietRestrictions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/diets/{id}/status": {
      "put": {
        "summary": "Change diets status",
        "tags": ["Diets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["isActive"],
                "properties": {
                  "isActive": {
                    "isActive": "boolean"
                  }
                },
                "example": {
                  "isActive": true
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/diets": {
      "post": {
        "summary": "Create a diet",
        "tags": ["Diets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiet"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diet"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all users' diets",
        "tags": ["Diets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Diet"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/diets/{id}": {
      "get": {
        "summary": "Get a diet",
        "tags": ["Diets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diet"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a diet",
        "tags": ["Diets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDiet"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Diet"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a diet",
        "tags": ["Diets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Diet id"
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/file": {
      "post": {
        "summary": "Upload file to firebase storage",
        "tags": ["File"],
        "requestBody": {
          "required": true,
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "fileUrl": {
                      "type": "string",
                      "format": "uri",
                      "example": "https://firebasestorage.googleapis.com/v0/b/healthcare-1d3e9.appspot.com/o/2021-08-01T14%3A00%3A00.000Z-IMG_20210801_140000.jpg?alt=media&token=3e3e3e3e-3e3e-3e3e-3e3e-3e3e3e3e3e3e"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        }
      }
    },
    "/foods": {
      "get": {
        "summary": "Get all foods",
        "tags": ["Foods"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "food name"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Food"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/foods/{id}": {
      "get": {
        "summary": "Get a food",
        "tags": ["Foods"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Food"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/meals": {
      "post": {
        "summary": "Create a meal",
        "tags": ["Meals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeal"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all meals",
        "tags": ["Meals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "dietId",
            "schema": {
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Meal"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/meals/{id}": {
      "get": {
        "summary": "Get a meal",
        "tags": ["Meals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a meal",
        "tags": ["Meals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMeal"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Meal"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a meal",
        "tags": ["Meals"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/user-medical-conditions": {
      "post": {
        "summary": "Create a medical condition",
        "tags": ["UserMedicalConditions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["medicalConditionIds"],
                "properties": {
                  "medicalConditionIds": {
                    "type": "array",
                    "items": {
                      "type": "number"
                    }
                  }
                },
                "example": {
                  "medicalConditionIds": [1]
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalConditionUserResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get user's medical conditions",
        "tags": ["UserMedicalConditions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MedicalConditionUserResponse"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/user-medical-conditions/{id}": {
      "get": {
        "summary": "Get a user's medical condition",
        "tags": ["UserMedicalConditions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalConditionUserResponse"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a user's medical condition",
        "tags": ["UserMedicalConditions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/medical-conditions": {
      "post": {
        "summary": "Create a medical condition",
        "tags": ["MedicalConditions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "description", "high", "low", "avoid"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "high": {
                    "type": "string"
                  },
                  "low": {
                    "type": "string"
                  },
                  "avoid": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "test",
                  "description": "test",
                  "high": "test",
                  "low": "test",
                  "avoid": "test"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalCondition"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all medical conditions",
        "tags": ["MedicalConditions"],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "medical condition name"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/MedicalCondition"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/medical-conditions/{id}": {
      "get": {
        "summary": "Get a medical condition",
        "tags": ["MedicalConditions"],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalCondition"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a medical condition",
        "tags": ["MedicalConditions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "high": {
                    "type": "string"
                  },
                  "low": {
                    "type": "string"
                  },
                  "avoid": {
                    "type": "string"
                  }
                },
                "example": {
                  "name": "test",
                  "description": "test",
                  "high": "test",
                  "low": "test",
                  "avoid": "test"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MedicalCondition"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a medical condition",
        "tags": ["MedicalConditions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/messages": {
      "post": {
        "summary": "Send message to chat room",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateMessage"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all messages of a chat",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "chatId",
            "schema": {
              "type": "integer"
            }
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Message"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/messages/{id}": {
      "put": {
        "summary": "Update a message",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateMessage"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Message"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a message",
        "tags": ["Messages"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/notifications": {
      "get": {
        "summary": "Get all users' notifications",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Notification"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "summary": "Mark all notification as read",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/notifications/{id}": {
      "put": {
        "summary": "Mark notification as read",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Notification"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/notifications/unread-count": {
      "get": {
        "summary": "Get unread notification count",
        "tags": ["Notifications"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "count": {
                      "type": "number"
                    }
                  },
                  "example": {
                    "count": 1
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/ratings": {
      "post": {
        "summary": "Create a rating",
        "tags": ["Ratings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateRating"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rating"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all ratings",
        "tags": ["Ratings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          },
          {
            "in": "params",
            "name": "expertId",
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Rating"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/ratings/{id}": {
      "get": {
        "summary": "Get a rating",
        "tags": ["Ratings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rating"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a rating",
        "tags": ["Ratings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateRating"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Rating"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a rating",
        "tags": ["Ratings"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/transactions": {
      "post": {
        "summary": "Create a transaction",
        "tags": ["Transactions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateTransaction"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all transactions",
        "tags": ["Transactions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/Transaction"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/transactions/{id}": {
      "get": {
        "summary": "Get a transaction",
        "tags": ["Transactions"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Transaction"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users": {
      "post": {
        "summary": "Create a user",
        "description": "Only admins can create other users.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["name", "email", "password", "role"],
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "must be unique"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "description": "At least one number and one letter"
                  },
                  "role": {
                    "type": "string",
                    "enum": ["user", "admin"]
                  }
                },
                "example": {
                  "name": "fake name",
                  "email": "fake@example.com",
                  "password": "password1",
                  "role": "user"
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DuplicateEmail"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "description": "Only admins can retrieve all users.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "User name"
          },
          {
            "in": "query",
            "name": "role",
            "schema": {
              "type": "string"
            },
            "description": "User role"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "sortType",
            "schema": {
              "$ref": "#/components/enums/SortTypeEnum"
            },
            "default": "asc"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10,
            "description": "Maximum number of users"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Get a user",
        "description": "Admin and experts can fetch other users.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "put": {
        "summary": "Update a user",
        "description": "Logged in users can only update their own information. Only admins can update other users.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "description": "must be unique"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "minLength": 8,
                    "description": "At least one number and one letter"
                  }
                },
                "example": {
                  "name": "fake name",
                  "email": "fake@example.com",
                  "password": "password1"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DuplicateEmail"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "patch": {
        "summary": "Update user account type",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User id"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accountType": {
                    "$ref": "#/components/enums/AccountTypeEnum"
                  }
                },
                "example": {
                  "accountType": "ADVANCE"
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/DuplicateEmail"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      },
      "delete": {
        "summary": "Delete a user",
        "description": "Logged in users can delete only themselves. Only admins can delete other users.",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User id"
          }
        ],
        "responses": {
          "200": {
            "description": "No content"
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        }
      }
    },
    "/users/experts": {
      "get": {
        "summary": "Get all experts",
        "tags": ["Users"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "name",
            "schema": {
              "type": "string"
            },
            "description": "User name"
          },
          {
            "in": "query",
            "name": "sortBy",
            "schema": {
              "type": "string"
            },
            "description": "sort by query in the form of field:desc/asc (ex. name:asc)"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "type": "integer",
              "minimum": 1
            },
            "default": 10,
            "description": "Maximum number of users"
          },
          {
            "in": "query",
            "name": "page",
            "schema": {
              "type": "integer",
              "minimum": 1,
              "default": 1
            },
            "description": "Page number"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "results": {
                      "type": "array",
                      "items": {
                        "$ref": "#/components/schemas/User"
                      }
                    },
                    "page": {
                      "type": "integer",
                      "example": 1
                    },
                    "limit": {
                      "type": "integer",
                      "example": 10
                    },
                    "totalPages": {
                      "type": "integer",
                      "example": 1
                    },
                    "totalResults": {
                      "type": "integer",
                      "example": 1
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    },
    "/wallet": {
      "get": {
        "summary": "Get user's wallet",
        "tags": ["Wallets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Wallet"
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      },
      "put": {
        "summary": "Update user's wallet balance",
        "tags": ["Wallets"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": ["amount"],
                "properties": {
                  "amount": {
                    "type": "number"
                  }
                },
                "example": {
                  "amout": 100000
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "amount": {
                      "type": "number"
                    }
                  },
                  "example": {
                    "amount": 100
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/Unauthorized"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        }
      }
    }
  },
  "components": {
    "enums": {
      "SortTypeEnum": {
        "type": "string",
        "enum": ["asc", "desc"]
      },
      "RoleEnum": {
        "type": "string",
        "enum": ["USER", "EXPERT", "ADMIN", "MODERATOR"]
      },
      "GenderEnum": {
        "type": "string",
        "enum": ["MALE", "FEMALE", "OTHER"]
      },
      "AccountTypeEnum": {
        "type": "string",
        "enum": ["BASIC", "ADVANCE", "GOLD"]
      },
      "ApplicationStatusEnum": {
        "type": "string",
        "enum": ["PENDING", "APPROVED", "REJECTED"]
      },
      "ApplicationTypeEnum": {
        "type": "string",
        "enum": [
          "REGISTER_EXPERT",
          "WITHDRAW",
          "DEPOSIT",
          "CONTACT_EXPERT",
          "REPORT",
          "CREATE_DIET",
          "UPDATE_DIET"
        ]
      },
      "MealTypeEnum": {
        "type": "string",
        "enum": ["BREAKFAST", "LUNCH", "DINNER", "SNACK", "OTHER"]
      },
      "ReportStatusEnum": {
        "type": "string",
        "enum": ["COMPLETE", "INCOMPLETE", "OVERCOMPLETE"]
      },
      "ChatTypeEnum": {
        "type": "string",
        "enum": ["VOICE", "MESSAGE"]
      },
      "ChatStatusEnum": {
        "type": "string",
        "enum": ["PROGRESSING", "CLOSED"]
      },
      "TransactionTypeEnum": {
        "type": "string",
        "enum": ["DEPOSIT", "CHECKOUT"]
      },
      "TransactionStatusEnum": {
        "type": "string",
        "enum": ["CREATED", "PROCESSING", "FAILED", "COMPLETED"]
      },
      "TransactionMethodEnum": {
        "type": "string",
        "enum": ["VNPAY", "WALLET"]
      },
      "DeviceTypeEnum": {
        "type": "string",
        "enum": ["ANDROID", "IOS"]
      }
    },
    "schemas": {
      "CreateUser": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "height": {
            "type": "number"
          },
          "freeTimes": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "startFreeTime": {
                  "type": "string",
                  "format": "date-time"
                },
                "endFreeTime": {
                  "type": "string",
                  "format": "date-time"
                }
              }
            }
          }
        },
        "example": {
          "email": "user@gmail.com",
          "name": "fake name",
          "avatar": "https://www.google.com",
          "dob": "2020-05-12T16:18:04.793Z",
          "height": 170,
          "freeTimes": [
            {
              "startFreeTime": "2020-05-12T16:18:04.793Z",
              "endFreeTime": "2020-05-12T16:18:04.793Z"
            }
          ]
        }
      },
      "CreateBmiRecord": {
        "type": "object",
        "properties": {
          "weight": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Food": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "image": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "source": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "name": "fake name",
          "image": "https://www.google.com",
          "description": "test",
          "source": "test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "MedicalConditionUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "conditionId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "userId": 1,
          "conditionId": 1,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "MedicalConditionUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/MedicalConditionUser"
          },
          {
            "type": "object",
            "properties": {
              "medicalCondition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/MedicalCondition"
                }
              }
            }
          }
        ]
      },
      "DietRestrictionUser": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "restrictionId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "userId": 1,
          "restrictionId": 1,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "DietRestrictionUserResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/DietRestrictionUser"
          },
          {
            "type": "object",
            "properties": {
              "medicalCondition": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/DietRestriction"
                }
              }
            }
          }
        ]
      },
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "name": {
            "type": "string"
          },
          "avatar": {
            "type": "string"
          },
          "role": {
            "$ref": "#/components/enums/RoleEnum"
          },
          "gender": {
            "$ref": "#/components/enums/GenderEnum"
          },
          "accountType": {
            "$ref": "#/components/enums/AccountTypeEnum"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "height": {
            "type": "number"
          },
          "guid": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "email": "fake@example.com",
          "name": "fake name",
          "avatar": "https://www.google.com",
          "role": "USER",
          "gender": "FEMALE",
          "accountType": "BASIC",
          "height": 170,
          "dob": "2020-05-12T16:18:04.793Z",
          "guid": "387b6781-f145-45b6-9cf7-ecdaf96e141c",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "Application": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/enums/ApplicationStatusEnum"
          },
          "type": {
            "$ref": "#/components/enums/ApplicationTypeEnum"
          },
          "image": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "initialWeight": {
            "type": "number"
          },
          "targetWeight": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "approvedById": {
            "type": "number"
          },
          "sourceId": {
            "type": "number"
          },
          "dietCategoryId": {
            "type": "number"
          },
          "note": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "status": "PENDING",
          "type": "EXPERT",
          "image": "https://www.google.com",
          "description": "test",
          "initialWeight": 50,
          "targetWeight": 51,
          "userId": 1,
          "approvedById": 1,
          "sourceId": 1,
          "note": "test",
          "dietCategoryId": 1,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateApplication": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/enums/ApplicationTypeEnum"
          },
          "image": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "initialWeight": {
            "type": "number"
          },
          "targetWeight": {
            "type": "number"
          },
          "approvedById": {
            "type": "number"
          },
          "dietCategoryId": {
            "type": "number"
          }
        },
        "example": {
          "type": "EXPERT",
          "approvedById": 1,
          "image": "https://www.google.com",
          "description": "test",
          "initialWeight": 50,
          "targetWeight": 51,
          "dietCategoryId": 1
        }
      },
      "BmiRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "weight": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "weight": 10,
          "userId": 1,
          "date": "2020-05-12T16:18:04.793Z",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "MedicalCondition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "high": {
            "type": "string"
          },
          "low": {
            "type": "string"
          },
          "avoid": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "name": "test",
          "description": "test",
          "high": "test",
          "low": "test",
          "avoid": "test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "DietRestriction": {
        "type": "object",
        "properties": {
          "high": {
            "type": "string"
          },
          "low": {
            "type": "string"
          },
          "avoid": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "high": "test",
          "low": "test",
          "avoid": "test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "Diet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "initialWeight": {
            "type": "number"
          },
          "targetWeight": {
            "type": "number"
          },
          "actualWeight": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "expertId": {
            "type": "number"
          },
          "categoryId": {
            "type": "number"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "isActive": {
            "type": "boolean"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "name": "test",
          "description": "test",
          "initialWeight": 50,
          "targetWeight": 51,
          "actualWeight": 52,
          "userId": 1,
          "expertId": 1,
          "categoryId": 1,
          "startDate": "2020-05-12T16:18:04.793Z",
          "endDate": "2020-05-12T16:18:04.793Z",
          "isActive": true,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateDiet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "initialWeight": {
            "type": "number"
          },
          "targetWeight": {
            "type": "number"
          },
          "actualWeight": {
            "type": "number"
          },
          "startDate": {
            "type": "string",
            "format": "date-time"
          },
          "endDate": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "number"
          },
          "isActive": {
            "type": "boolean"
          }
        },
        "example": {
          "name": "test",
          "description": "test",
          "startDate": "2020-05-12T16:18:04.793Z",
          "endDate": "2020-05-12T16:18:04.793Z",
          "initialWeight": 50,
          "targetWeight": 51,
          "actualWeight": 52,
          "userId": 1,
          "categoryId": 1,
          "isActive": true
        }
      },
      "DietCategory": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "high": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "low": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "name": "test",
          "description": "test",
          "high": "test, test, test",
          "low": "test, test, test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateDietCategory": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "high": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "low": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "example": {
          "name": "test",
          "description": "test",
          "high": [],
          "low": []
        }
      },
      "DailyDiet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dietId": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "name": "test",
          "description": "test",
          "dietId": 1,
          "date": "2020-05-12T16:18:04.793Z",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateDailyDiet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "dietId": {
            "type": "number"
          }
        },
        "example": {
          "name": "test",
          "description": "test",
          "date": "2020-05-12T16:18:04.793Z",
          "dietId": 1
        }
      },
      "UpdateDailyDiet": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "name": "test",
          "description": "test",
          "date": "2020-05-12T16:18:04.793Z"
        }
      },
      "DailyDietReport": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "score": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/enums/ReportStatusEnum"
          },
          "feedback": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "score": 10,
          "status": "SATISFIED",
          "feedback": "test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateDailyDietReport": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/enums/ReportStatusEnum"
          },
          "feedback": {
            "type": "string"
          },
          "dayId": {
            "type": "number"
          }
        },
        "example": {
          "score": 10,
          "status": "SATISFIED",
          "feedback": "test",
          "dayId": 1
        }
      },
      "UpdateDailyDietReport": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number"
          },
          "status": {
            "$ref": "#/components/enums/ReportStatusEnum"
          },
          "feedback": {
            "type": "string"
          }
        },
        "example": {
          "score": 10,
          "status": "SATISFIED",
          "feedback": "test"
        }
      },
      "Rating": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "score": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "expertId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "score": 2,
          "feedback": "test",
          "userId": 1,
          "expertId": 1,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateRating": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "expertId": {
            "type": "number"
          }
        },
        "example": {
          "score": 2,
          "description": "test",
          "expertId": 1
        }
      },
      "UpdateRating": {
        "type": "object",
        "properties": {
          "score": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "score": 3,
          "description": "test"
        }
      },
      "DailyCal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "date": "2020-05-12T16:18:04.793Z",
          "description": "test",
          "userId": 1,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateDailyCal": {
        "type": "object",
        "properties": {
          "description": {
            "type": "string"
          },
          "date": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "description": "test",
          "date": "2020-05-12T16:18:04.793Z"
        }
      },
      "CalRecord": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "nutrient": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "dayCalId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "nutrient": "test",
          "amount": 200,
          "unit": "cals",
          "dayCalId": 1,
          "description": "test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateCalRecord": {
        "type": "object",
        "properties": {
          "nutrient": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "dayCalId": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "nutrient": "test",
          "amount": 200,
          "unit": "cals",
          "dayCalId": 1,
          "description": "test"
        }
      },
      "UpdateCalRecord": {
        "type": "object",
        "properties": {
          "nutrient": {
            "type": "string"
          },
          "amount": {
            "type": "number"
          },
          "unit": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "nutrient": "test",
          "amount": 200,
          "unit": "cals",
          "description": "test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "Meal": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dietId": {
            "type": "number"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/enums/MealTypeEnum"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "name": "test",
          "description": "test",
          "dietId": 1,
          "time": "2020-05-12T16:18:04.793Z",
          "type": "BREAKFAST",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateMeal": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "time": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/enums/MealTypeEnum"
          },
          "dayId": {
            "type": "number"
          },
          "foods": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "number"
                },
                "amount": {
                  "type": "number"
                },
                "unit": {
                  "type": "string"
                }
              }
            }
          }
        },
        "example": {
          "name": "test",
          "description": "test",
          "time": "2020-05-12T16:18:04.793Z",
          "type": "BREAKFAST",
          "amount": 200,
          "unit": "cals",
          "dayId": 1,
          "foods": [
            {
              "id": 1,
              "amount": 200,
              "unit": "cals"
            },
            {
              "id": 2,
              "amount": 200,
              "unit": "cals"
            }
          ]
        }
      },
      "Chat": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "type": {
            "$ref": "#/components/enums/ChatTypeEnum"
          },
          "status": {
            "$ref": "#/components/enums/ChatStatusEnum"
          },
          "expertId": {
            "type": "number"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "type": "MESSAGE",
          "status": "PROGRESSING",
          "expertId": 3,
          "userId": 2,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateChat": {
        "type": "object",
        "properties": {
          "type": {
            "$ref": "#/components/enums/ChatTypeEnum"
          },
          "status": {
            "$ref": "#/components/enums/ChatStatusEnum"
          },
          "receiverId": {
            "type": "number"
          }
        },
        "example": {
          "type": "MESSAGE",
          "status": "PROGRESSING",
          "receiverId": 2
        }
      },
      "Message": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "chatId": {
            "type": "number"
          },
          "senderId": {
            "type": "number"
          },
          "content": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "chatId": 1,
          "senderId": 3,
          "content": "test",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateMessage": {
        "type": "object",
        "properties": {
          "chatId": {
            "type": "number"
          },
          "content": {
            "type": "string"
          }
        },
        "example": {
          "chatId": 1,
          "content": "test"
        }
      },
      "UpdateMessage": {
        "type": "object",
        "properties": {
          "content": {
            "type": "string"
          }
        },
        "example": {
          "content": "test"
        }
      },
      "Wallet": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "balance": {
            "type": "number"
          },
          "previousBalance": {
            "type": "number"
          },
          "lastDeposit": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "balace": 0,
          "previousBalance": 0,
          "userId": 2,
          "lastDeposit": "2020-05-12T16:18:04.793Z",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "Transaction": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "amount": {
            "type": "number"
          },
          "type": {
            "$ref": "#/components/enums/TransactionTypeEnum"
          },
          "status": {
            "$ref": "#/components/enums/TransactionStatusEnum"
          },
          "method": {
            "$ref": "#/components/enums/TransactionMethodEnum"
          },
          "description": {
            "type": "string"
          },
          "userId": {
            "type": "number"
          },
          "walletId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "amount": 100,
          "type": "DEPOSIT",
          "status": "CREATED",
          "method": "VNPAY",
          "description": "test",
          "userId": 2,
          "walletId": 1,
          "lastDeposit": "2020-05-12T16:18:04.793Z",
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateTransaction": {
        "type": "object",
        "properties": {
          "amount": {
            "type": "number"
          },
          "description": {
            "type": "string"
          }
        },
        "example": {
          "amount": 100,
          "description": "test"
        }
      },
      "Notification": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          },
          "readAt": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "title": "test",
          "content": "test",
          "readAt": "2020-05-12T16:18:04.793Z",
          "userId": 2,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "CreateNotification": {
        "type": "object",
        "properties": {
          "title": {
            "type": "string"
          },
          "content": {
            "type": "string"
          }
        },
        "example": {
          "title": 100,
          "content": "test"
        }
      },
      "FreeTime": {
        "type": "object",
        "properties": {
          "id": {
            "type": "number"
          },
          "startFreeTime": {
            "type": "string",
            "format": "date-time"
          },
          "endFreeTime": {
            "type": "string",
            "format": "date-time"
          },
          "userId": {
            "type": "number"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "id": 1,
          "startFreeTime": "2020-05-12T16:18:04.793Z",
          "endFreeTime": "2020-05-12T16:18:04.793Z",
          "userId": 2,
          "createdAt": "2020-05-12T16:18:04.793Z",
          "updatedAt": "2020-05-12T16:18:04.793Z"
        }
      },
      "Token": {
        "type": "object",
        "properties": {
          "token": {
            "type": "string"
          },
          "expires": {
            "type": "string",
            "format": "date-time"
          }
        },
        "example": {
          "token": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg",
          "expires": "2020-05-12T16:18:04.793Z"
        }
      },
      "AuthTokens": {
        "type": "object",
        "properties": {
          "access": {
            "$ref": "#/components/schemas/Token"
          },
          "refresh": {
            "$ref": "#/components/schemas/Token"
          }
        }
      },
      "ExpertRegisterResponse": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "type": "object",
            "properties": {
              "applications": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/Application"
                }
              }
            }
          }
        ]
      },
      "Error": {
        "type": "object",
        "properties": {
          "code": {
            "type": "number"
          },
          "message": {
            "type": "string"
          }
        }
      }
    },
    "responses": {
      "DuplicateEmail": {
        "description": "Email already taken",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 400,
              "message": "Email already taken"
            }
          }
        }
      },
      "BadRequest": {
        "description": "Bad request",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 400,
              "message": "Bad request"
            }
          }
        }
      },
      "Unauthorized": {
        "description": "Unauthorized",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 401,
              "message": "Please authenticate"
            }
          }
        }
      },
      "Forbidden": {
        "description": "Forbidden",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 403,
              "message": "Forbidden"
            }
          }
        }
      },
      "NotFound": {
        "description": "Not found",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            },
            "example": {
              "code": 404,
              "message": "Not found"
            }
          }
        }
      }
    },
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    }
  },
  "tags": [
    {
      "name": "Application",
      "description": "Application management and retrieval"
    },
    {
      "name": "Auth",
      "description": "Authentication"
    },
    {
      "name": "BmiRecords",
      "description": "Bmi record management and retrieval"
    },
    {
      "name": "CalRecords",
      "description": "Cal recordsj management and retrieval"
    },
    {
      "name": "Chats",
      "description": "Chat management and retrieval"
    },
    {
      "name": "DailyCals",
      "description": "Daily cals management and retrieval"
    },
    {
      "name": "DailyDietReports",
      "description": "Daily diet reports management and retrieval"
    },
    {
      "name": "DailyDiets",
      "description": "Daily diets management and retrieval"
    },
    {
      "name": "DietCategories",
      "description": "Diet category management and retrieval"
    },
    {
      "name": "UserDietRestrictions",
      "description": "User's diet restrictions management and retrieval"
    },
    {
      "name": "DietRestrictions",
      "description": "Diet restriction management and retrieval"
    },
    {
      "name": "Diets",
      "description": "Diets management and retrieval"
    },
    {
      "name": "File",
      "description": "Upload file to firebase storage"
    },
    {
      "name": "Foods",
      "description": "Food management and retrieval"
    },
    {
      "name": "Meals",
      "description": "Meal management and retrieval"
    },
    {
      "name": "UserMedicalConditions",
      "description": "User's medical conditions management and retrieval"
    },
    {
      "name": "MedicalConditions",
      "description": "Medical conditions management and retrieval"
    },
    {
      "name": "Messages",
      "description": "Message management and retrieval"
    },
    {
      "name": "Notifications",
      "description": "Notification management and retrieval"
    },
    {
      "name": "Ratings",
      "description": "Rating management and retrieval"
    },
    {
      "name": "Transactions",
      "description": "Transactions management and retrieval"
    },
    {
      "name": "Users",
      "description": "User management and retrieval"
    },
    {
      "name": "Wallets",
      "description": "Wallet management and retrieval"
    }
  ]
}
